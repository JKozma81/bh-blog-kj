{{> adminHeader }}
{{> confirmationModal }}
{{#if error}}
<div class="alert alert-danger text-center" role="alert">
  {{error}}
</div>
{{/if}}
<div class="container-fluid p-5 d-flex flex-column align-items-center new-post-site">
  <h1 class="pb-3">{{submenuTitle}}</h1>
  <form method="POST" action="/posts" class="new-post-form needs-validation">
    <div class="form-group row">
      <label for="post_title" class="col-sm-2 col-form-label">Title</label>
      <div class="col-sm-10">
        <input type="text" class="form-control" id="post_title" name="title" {{#if title}}value="{{title}}" {{/if}}
          placeholder="Some blogpost title" required>
      </div>
    </div>
    <div class="form-group row">
      <label for="post_slug" class="col-sm-2 col-form-label">Slug</label>
      <div class="col-sm-10">
        <input type="text" class="form-control" id="post_slug" name="slug" {{#if slug}}value="{{slug}}" {{/if}}
          placeholder="">
      </div>
    </div>
    <div class="form-group row">
      <label for="post_tags" class="col-sm-2 col-form-label">Tags</label>
      <div class="col-sm-10">
        <input type="text" class="form-control" id="post_tags" name="tags" {{#if tags}}value="{{tags}}" {{/if}}
          placeholder="design,javascript,programing" required>
      </div>
    </div>
    <div class="form-group row">
      <label for="post_content" class="col-sm-12 col-form-label">Content</label>
      <div class="col-sm-12 h-100">
        <div class="container-fluid" id="editor">

        </div>
        <input name="content" type="hidden" id="post_content" required>
      </div>
    </div>
    <input type="text" name="draft" value="false" class="set-draft" disabled hidden>
    <div class="form-group row d-flex justify-content-between">
      <button type="button" class="btn btn-primary mb-2" onclick="showModal()">Discard</button>
      <button type="submit" class="btn btn-primary mb-2 save-draft">Save as draft</button>
      <button type="submit" class="btn btn-primary mb-2 publish">Publish</button>
    </div>

    <div class="alert alert-danger mt-2 missing-fields-alert" role="alert">

    </div>

    {{#if postError}}
    <div class="alert alert-danger mt-2" role="alert">
      {{postError}}
      <button type="button" class="close" data-dismiss="alert" aria-label="Close">
        <span aria-hidden="true">&times;</span>
      </button>
    </div>
    {{/if}}

  </form>
</div>

<script>

  (function () {

    function generateSlug(event) {
      const titleInputField = document.querySelector('#post_title');
      const slugInputField = document.querySelector('#post_slug');

      const key = String.fromCharCode(event.charCode);
      const translateChars = { 'á': 'a', 'é': 'e', 'í': 'i', 'ó': 'o', 'ö': 'o', 'ő': 'o', 'ú': 'u', 'ü': 'u', 'ű': 'u', ' ': '-' };
      const charRegex = RegExp('^[áéíóöőúüű ]+$', 'g');

      if (!slugInputField.value) {
        let textForPlaceholder = titleInputField.value.toLowerCase().split('');
        textForPlaceholder = textForPlaceholder.map(character => character.replace(charRegex, match => translateChars[match])).join('')
        slugInputField.placeholder = textForPlaceholder;
      }
    }

    window.addEventListener('load', function () {
      const form = document.querySelector('.new-post-form');

      document.querySelector('#post_title').addEventListener('keyup', generateSlug);

      document.querySelector('.save-draft').addEventListener('click', () => {
        document.querySelector('.set-draft').value = true;
        document.querySelector('.set-draft').disabled = false;
      })

      document.querySelector('.publish').addEventListener('click', () => {
        document.querySelector('.set-draft').value = false;
        document.querySelector('.set-draft').disabled = false;
      })

      document.querySelector('#post_slug').addEventListener('keypress', (event) => {
        const regex = new RegExp("^[a-z\-]+$");
        const key = String.fromCharCode(event.charCode);
        if (!regex.test(key)) {
          event.preventDefault();
        }
      })

      document.querySelector('#post_tags').addEventListener('keypress', (event) => {
        const regex = new RegExp("^[a-zA-Z,\-]+$");
        const key = String.fromCharCode(event.charCode);
        if (!regex.test(key)) {
          event.preventDefault();
        }
      })

      function displayErrorMessage(message) {
        const errorTextDisplay = document.createTextNode(message);
        document.querySelector('.missing-fields-alert').firstChild.textContent = '';
        document.querySelector('.missing-fields-alert').prepend(errorTextDisplay);
        document.querySelector('.missing-fields-alert').style.display = 'block';
        return;
      }

      form.addEventListener('submit', function (event) {
        event.preventDefault();

        if (!document.querySelector('#post_title').value && !document.querySelector('#post_content').value && !document.querySelector('#post_tags').value) {
          displayErrorMessage('Title, Tags and Content are Mandatory!');
        }

        if (!document.querySelector('#post_title').value && !document.querySelector('#post_tags').value) {
          displayErrorMessage('Title and Tags are Mandatory!');
        }

        if (!document.querySelector('#post_content').value && !document.querySelector('#post_tags').value) {
          displayErrorMessage('Tags and Content are Mandatory!');
        }


        if (!document.querySelector('#post_title').value) {
          displayErrorMessage('Title is Mandatory!');
        }

        if (!document.querySelector('#post_tags').value) {
          displayErrorMessage('Title is Mandatory!');
        }

        if (!document.querySelector('#post_content').value) {
          displayErrorMessage('Content is Mandatory!');
        }

        if (document.querySelector('#post_title').value && document.querySelector('#post_content').value && document.querySelector('#post_tags').value) {
          document.querySelector('#post_slug').value = document.querySelector('#post_slug').placeholder;
          form.submit();
        }

        form.classList.add('was-validated');

      }, false);

      const toolbarOptions = [
        ['bold', 'italic', 'underline', 'strike'],
        ['blockquote', 'code-block'],
        [{ 'header': 1 }, { 'header': 2 }],
        [{ 'list': 'ordered' }, { 'list': 'bullet' }],
        [{ 'script': 'sub' }, { 'script': 'super' }],
        [{ 'indent': '-1' }, { 'indent': '+1' }],
        [{ 'direction': 'rtl' }],
        [{ 'size': ['small', false, 'large', 'huge'] }],
        [{ 'header': [1, 2, 3, 4, 5, 6, false] }],
        [{ 'color': [] }, { 'background': [] }],
        [{ 'font': [] }],
        [{ 'align': [] }],
        ['clean']
      ];
      const editor = new Quill('#editor', {
        modules: {
          toolbar: toolbarOptions
        },
        theme: 'snow'
      });
      editor.on('editor-change', () => {
        document.querySelector('#post_content').value = editor.root.innerHTML;
      })

    }, false);
  })();
  function showModal() {
    $('.confirm-modal').modal('show');
  }
</script>